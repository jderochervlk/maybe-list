// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Todos = require("./Todos.bs.js");
var React = require("react");
var Belt_List = require("rescript/lib/js/belt_List.js");
var CreateTodo = require("./CreateTodo.bs.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Dom_storage = require("rescript/lib/js/dom_storage.js");

function initTodos(todos) {
  if (todos !== undefined) {
    return todos;
  } else {
    return /* [] */0;
  }
}

function sortTodos(t) {
  var notComplete = Belt_List.keep(t, (function (x) {
          return !x.completed;
        }));
  var complete = Belt_List.keep(t, (function (x) {
          return x.completed;
        }));
  return {
          hd: notComplete,
          tl: {
            hd: complete,
            tl: /* [] */0
          }
        };
}

function TodosContainer(Props) {
  var todos = Props.todos;
  var match = React.useState(function () {
        if (todos !== undefined) {
          return todos;
        } else {
          return /* [] */0;
        }
      });
  var setItems = match[1];
  var items = match[0];
  var match$1 = React.useState(function () {
        return Belt_List.head(sortTodos(todos !== undefined ? todos : /* [] */0));
      });
  var setIncomplete = match$1[1];
  var match$2 = React.useState(function () {
        return Belt_List.get(sortTodos(todos !== undefined ? todos : /* [] */0), 1);
      });
  var handleCreate = function (e) {
    var time = Date.now();
    var newTodo = {
      text: e,
      completed: false,
      createdAt: time,
      id: 0
    };
    Curry._1(setItems, (function (x) {
            return Belt_List.add(x, newTodo);
          }));
  };
  var handleClick = function (e) {
    var updatedTodo_text = e.text;
    var updatedTodo_completed = !e.completed;
    var updatedTodo_createdAt = e.createdAt;
    var updatedTodo_id = e.id;
    var updatedTodo = {
      text: updatedTodo_text,
      completed: updatedTodo_completed,
      createdAt: updatedTodo_createdAt,
      id: updatedTodo_id
    };
    Curry._1(setItems, (function (_items) {
            return Belt_List.add(Belt_List.keep(_items, (function (x) {
                              return x.id !== e.id;
                            })), updatedTodo);
          }));
    Curry._1(setIncomplete, (function (param) {
            return Belt_List.head(sortTodos(todos !== undefined ? todos : /* [] */0));
          }));
  };
  React.useEffect((function () {
          Belt_Option.forEach(JSON.stringify(Belt_List.toArray(items)), (function (x) {
                  Dom_storage.setItem("todos", x, localStorage);
                }));
        }), [items]);
  return React.createElement("div", undefined, React.createElement(CreateTodo.make, {
                  onCreate: handleCreate
                }), React.createElement(Todos.make, {
                  todos: match$1[0],
                  handleClick: handleClick
                }), React.createElement("h2", undefined, "completed"), React.createElement(Todos.make, {
                  todos: match$2[0],
                  handleClick: handleClick
                }));
}

var make = TodosContainer;

exports.initTodos = initTodos;
exports.sortTodos = sortTodos;
exports.make = make;
/* Todos Not a pure module */
