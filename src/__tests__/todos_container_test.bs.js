// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/rescript-jest/src/jest.bs.js");
var Curry = require("rescript/lib/js/curry.js");
var React = require("react");
var Belt_List = require("rescript/lib/js/belt_List.js");
var TodosContainer = require("../TodosContainer.bs.js");
var ReactTestingLibrary = require("../external/ReactTestingLibrary.bs.js");

var todos = {
  hd: {
    text: "one",
    completed: false,
    createdAt: 1.0,
    id: 1
  },
  tl: {
    hd: {
      text: "two",
      completed: true,
      createdAt: 2.0,
      id: 2
    },
    tl: /* [] */0
  }
};

Jest.test("renders", (function (param) {
        var result = ReactTestingLibrary.render(undefined, undefined, undefined, undefined, undefined, React.createElement(TodosContainer.make, {
                  todos: todos
                }));
        return Jest.Expect.toMatchSnapshot(Jest.Expect.expect(result.container));
      }));

Jest.test("updates on click", (function (param) {
        var result = ReactTestingLibrary.render(undefined, undefined, undefined, undefined, undefined, React.createElement(TodosContainer.make, {
                  todos: {
                    hd: {
                      text: "one",
                      completed: false,
                      createdAt: 1.0,
                      id: 1
                    },
                    tl: /* [] */0
                  }
                }));
        ReactTestingLibrary.act(function (param) {
              Curry._2(ReactTestingLibrary.FireEvent.click, undefined, ReactTestingLibrary.getByRole({
                        NAME: "Str",
                        VAL: "checkbox"
                      }, undefined, result));
            });
        return Jest.Expect.toMatchSnapshot(Jest.Expect.expect(result.container));
      }));

Jest.test("initTodos handles empty todos", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(TodosContainer.initTodos(undefined)), /* [] */0);
      }));

Jest.test("initTodos handles existing todos", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(TodosContainer.initTodos(todos)), todos);
      }));

Jest.test("sortTodos returns not complete todos as head", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(Belt_List.head(TodosContainer.sortTodos(todos))), {
                    hd: {
                      text: "one",
                      completed: false,
                      createdAt: 1.0,
                      id: 1
                    },
                    tl: /* [] */0
                  });
      }));

Jest.test("sortTodos returns complete todos as tail", (function (param) {
        return Jest.Expect.toEqual(Jest.Expect.expect(Belt_List.get(TodosContainer.sortTodos(todos), 1)), {
                    hd: {
                      text: "two",
                      completed: true,
                      createdAt: 2.0,
                      id: 2
                    },
                    tl: /* [] */0
                  });
      }));

exports.todos = todos;
/*  Not a pure module */
