// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var React = require("react");
var TodoItem = require("./TodoItem.bs.js");
var DateFns = require("date-fns");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var CreateTodo = require("./CreateTodo.bs.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Dom_storage = require("rescript/lib/js/dom_storage.js");
var React$1 = require("@chakra-ui/react");

function initTodos(todos) {
  if (todos !== undefined) {
    return todos;
  } else {
    return [];
  }
}

function sort(t) {
  return t.sort(function (t3, param) {
              if (t3.completed) {
                return 1;
              } else {
                return -1;
              }
            });
}

function nextId(t) {
  var id = Belt_Array.get(t.sort(function (x1, x2) {
            if (x1.id < x2.id) {
              return 1;
            } else {
              return -1;
            }
          }), 0);
  if (id !== undefined) {
    return id.id + 1 | 0;
  } else {
    return 0;
  }
}

function Todos(Props) {
  var todos = Props.todos;
  var match = React.useState(function () {
        if (todos !== undefined) {
          return todos;
        } else {
          return [];
        }
      });
  var setItems = match[1];
  var items = match[0];
  var handleClick = function (e) {
    Curry._1(setItems, (function (_items) {
            return sort(_items.filter(function (t) {
                              return t.id !== e.id;
                            }).concat([{
                              text: e.text,
                              completed: !e.completed,
                              createdAt: e.createdAt,
                              id: e.id
                            }]));
          }));
  };
  var handleCreate = function (e) {
    var newTodo_createdAt = Date.now();
    var newTodo_id = nextId(items);
    var newTodo = {
      text: e,
      completed: false,
      createdAt: newTodo_createdAt,
      id: newTodo_id
    };
    Curry._1(setItems, (function (x) {
            return sort(x.concat([newTodo]));
          }));
  };
  React.useEffect((function () {
          Curry._1(setItems, (function (t) {
                  return t.filter(function (x) {
                              return DateFns.differenceInHours(x.createdAt, Date.now()) < 24.00;
                            });
                }));
        }), []);
  React.useEffect((function () {
          var string = JSON.stringify(items);
          Belt_Option.forEach(string, (function (x) {
                  Dom_storage.setItem("todos", x, localStorage);
                }));
        }), [items]);
  return React.createElement(React.Fragment, {
              children: null
            }, React.createElement(CreateTodo.make, {
                  onCreate: handleCreate
                }), React.createElement(React$1.Box, {
                  children: React.createElement(React$1.VStack, {
                        children: items.map(function (t) {
                              return React.createElement(TodoItem.make, {
                                          todo: t,
                                          onClick: handleClick,
                                          key: String(t.text)
                                        });
                            }),
                        align: "baseline"
                      }),
                  maxW: "800px",
                  m: "auto"
                }));
}

var make = Todos;

exports.initTodos = initTodos;
exports.sort = sort;
exports.nextId = nextId;
exports.make = make;
/* react Not a pure module */
